---
- hosts: all
  become: true

  tasks:
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3', 'python3-pip', 'virtualenv', 'python3-setuptools', 'python-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        #url: https://download.docker.com/linux/ubuntu/gpg
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        #repo: deb https://download.docker.com/linux/ubuntu xenial stable
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: docker
    
    - name: Log into DockerHub
      community.general.docker_login:
        username: "{{DOCKERHUB_USER}}"
        password: "{{DOCKERHUB_PASSWORD}}"

    #- name: Run service
    #  community.general.docker_swarm_service:
    #    name: final
    #    image: {{DOCKER_IMAGE}}
    #    replicas: 1
    #    args:
    #      - "3600"

    - name: Create namespace final
      k8s:
        name: final
        api_version: v1
        kind: Namespace
        state: present

    - name: Deploy image
      k8s:
        api_version: v1
        namespace: final
        definition:
          kind: Deployment
          metadata:
            labels:
              app: tomcat
            name: tomcat-deploy
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: tomcat
            template:
              metadata:
                labels:
                  app: tomcat
              spec:
                containers:
                  - name: my-webserver
                    image: nikitasp1992/main:"{{DOCKER_IMAGE}}"
                    ports:
                      - containerPort: 80
                        protocol: TCP