---
- hosts: all
  become: true

  tasks:
    - name: Install required system packages
      apt: name={{ item }} state=latest update_cache=yes
      loop: [ 'apt-transport-https', 'ca-certificates', 'curl', 'software-properties-common', 'python3', 'python3-pip', 'python-pip', 'virtualenv', 'python3-setuptools', 'python-setuptools']

    - name: Add Docker GPG apt Key
      apt_key:
        #url: https://download.docker.com/linux/ubuntu/gpg
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        #repo: deb https://download.docker.com/linux/ubuntu xenial stable
        repo: deb [arch=amd64] https://download.docker.com/linux/debian stretch stable
        state: present

    - name: Update apt and install docker-ce
      apt: update_cache=yes name=docker-ce state=latest

    - name: Install Docker Module for Python
      pip:
        name: "{{ item }}"
      #loop: [ 'kubernetes', 'docker', 'openshift' ]
      loop: [ 'docker' ]
    
    #- name: Log into DockerHub
    #  become: no
    #  community.general.docker_login:
    #    username: "{{DOCKERHUB_USER}}"
    #    password: "{{DOCKERHUB_PASSWORD}}"

    - name: Log into DockerHub
      become: no
      shell:
        cmd: kubectl create secret docker-registry myregistrykey --docker-username="{{DOCKERHUB_USER}}" --docker-password="{{DOCKERHUB_PASSWORD}}" --docker-email=nikitasp1992@gmail.com

    - name: Register JSON data
      set_fact:
        json_data: '{"imagePullSecrets": [{"name": "myregistrykey"}]}'

    - name: Log into DockerHub
      become: no
      shell:
        cmd: kubectl patch serviceaccount default -p "{{ json_data }}"

    - name: Copy ingress config
      copy:
        src: ingress.j2
        dest: /tmp/ingress.yml
        owner: root
        group: root
        mode: '0644'

    - name: Activate ingress
      become: no
      shell:
        cmd: minikube addons enable ingress

    #- name: Run service
    #  community.general.docker_swarm_service:
    #    name: final
    #    image: {{DOCKER_IMAGE}}
    #    replicas: 1
    #    args:
    #      - "3600"

    #- name: Create namespace final
    #  k8s:
    #    name: final
    #    api_version: v1
    #    kind: Namespace
    #    state: present

    - name: Create deploy
      become: no
      shell:
        cmd: kubectl create deployment final --image=nikitasp1992/main:"{{BUILD_NUMBER}}"

    - name: Expose deploy
      become: no
      shell:
        cmd: kubectl expose deployment final --type=NodePort --port=8080

    - name: Apply ingress
      become: no
      shell:
        cmd: kubectl apply -f /tmp/ingress.yml